"use strict";(self.webpackChunktheurgy_documentation=self.webpackChunktheurgy_documentation||[]).push([[977],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,k=m["".concat(u,".").concat(d)]||m[d]||s[d]||i;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7444:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:30},l="Accumulation Recipes",o={unversionedId:"recipe_types/accumulation",id:"recipe_types/accumulation",title:"Accumulation Recipes",description:"Properties",source:"@site/docs/recipe_types/accumulation.md",sourceDirName:"recipe_types",slug:"/recipe_types/accumulation",permalink:"/theurgy/recipe_types/accumulation",draft:!1,editUrl:"https://github.com/klikli-dev/theurgy/tree/documentation/docs/recipe_types/accumulation.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Distillation Recipes",permalink:"/theurgy/recipe_types/distillation"},next:{title:"Liquefaction Recipes",permalink:"/theurgy/recipe_types/liquefaction"}},u={},p=[{value:"Properties",id:"properties",level:2},{value:"Example Recipe",id:"example-recipe",level:2}],c={toc:p},m="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accumulation-recipes"},"Accumulation Recipes"),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," - ",(0,a.kt)("strong",{parentName:"li"},"ResourceLocation"),", the recipe type. Must be ",(0,a.kt)("inlineCode",{parentName:"li"},"theurgy:accumulation"),".")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"evaporant")," - ",(0,a.kt)("strong",{parentName:"li"},"Theurgy FluidIngredient"),", the fluid that will be evaporated to create the result fluid stack.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fluid")," ",(0,a.kt)("strong",{parentName:"li"},"Fluid ResourceLocation"),", the fluid accepted as input.")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"the fluid"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tag")," ",(0,a.kt)("strong",{parentName:"li"},"Tag ResourceLocation"),", the tag accepted as input."),(0,a.kt)("li",{parentName:"ul"},"or ",(0,a.kt)("inlineCode",{parentName:"li"},"fluid")," ",(0,a.kt)("strong",{parentName:"li"},"Fluid ResourceLocation"),", the fluid accepted as input.")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"amount")," ",(0,a.kt)("strong",{parentName:"li"},"Integer"),", the amount of fluid required / to consume."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"solute")," - ",(0,a.kt)("strong",{parentName:"li"},"Forge Ingredient"),", an optional solid ingredient to be added to the evaporant.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tag")," ",(0,a.kt)("strong",{parentName:"li"},"Tag ResourceLocation"),", the tag accepted as input."),(0,a.kt)("li",{parentName:"ul"},"or ",(0,a.kt)("inlineCode",{parentName:"li"},"item")," ",(0,a.kt)("strong",{parentName:"li"},"Item ResourceLocation"),", the item accepted as input."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"result")," - ",(0,a.kt)("strong",{parentName:"li"},"FluidStack"),", the fluid stack resulting from the accumulation process.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fluid")," ",(0,a.kt)("strong",{parentName:"li"},"Fluid ResourceLocation"),", the output fluid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"amount")," ",(0,a.kt)("strong",{parentName:"li"},"Integer"),", the output amount."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"accumulation_time")," - ",(0,a.kt)("strong",{parentName:"li"},"Integer"),", the number of ticks the accumulation process takes. Default is 200 ticks.")),(0,a.kt)("h2",{id:"example-recipe"},"Example Recipe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "theurgy:accumulation",\n  "accumulation_time": 200,\n  "evaporant": {\n    "amount": 1000,\n    "tag": "minecraft:water"\n  },\n  "result": {\n    "Amount": 1000,\n    "FluidName": "theurgy:sal_ammoniac"\n  },\n  "solute": {\n    "tag": "forge:gems/sal_ammoniac"\n  }\n}\n')))}s.isMDXComponent=!0}}]);